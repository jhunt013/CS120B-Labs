EX1

unsigned char GetBit(unsigned char x, unsigned char k) {	//get bit function
	return ( (x & (0x01 << k) ) != 0);
}


int main(void)
{	//setup and initalize ports
	DDRA = 0x00;	PORTA = 0xFF;
	DDRB = 0x00;	PORTB = 0xFF;	//A and B setup for input
	DDRC = 0xFF;	PORTC = 0x00;	//C setup for output
	
	unsigned char i;		//need for the for loop
	unsigned char counter;
	
   
    while (1){
	counter = 0;
	for(i = 0; i < 8; i++){
		if(GetBit(PINA,i)){	//count 1s on PORTA
			counter++;	
		}
		if(GetBit(PINB,i)){	//count 1s on PORTB
			counter++;
		}
	}
	PORTC = counter;		//write value of couter to PORTC
    }
	return 0;
}


EX2
/* fuel level: 	1-2	--> PC6, PC5				empty
		3-4	--> PC6, PC5, PC4

		5-6	--> PC5, PC4, PC3
		7-9 	--> PC5, PC4, PC3, PC2
		10-12	--> PC5, PC4, PC3, PC2, PC1
		13-15	--> PC5, PC4, PC3, PC2, PC1, PC0	full
	(if fuel level is <= 4 	--> PC6) 
	PC: 7 *6* 5 4    3 2 1 0 */

unsigned char GetBit(unsigned char x, unsigned char k) {
	return ((x & (0x01 << k)) != 0);
}
unsigned char SetBit(unsigned char x, unsigned char k, unsigned char b) {
	return (b ? x | (0x01 << k) : x & ~(0x01 << k));
}



int main(void)
{
	DDRA = 0x00; PORTA = 0xFF;	//setup PORTA for input
	DDRC = 0xFF; PORTC = 0x00;	//setup PORTB for output
	
	unsigned char tmpC = 0x00;
	unsigned char fuel_level;
	
	
    while (1) 
    {
	fuel_level = PINA & 0x0F;
	
	//check fuel level		
	if((fuel_level == 0x01) || (fuel_level == 0x02)){	//1-2	
		tmpC = 0x60;	//0110 0000
	}
	else if ((fuel_level == 0x03) || (fuel_level == 0x04)){	//3-4
		tmpC = 0x70;	//0111 0000
	}
	else if ((fuel_level == 0x05) || (fuel_level == 0x06)){	//5-6
		tmpC = 0x38;	//0011 1000
	}
	else if ((fuel_level == 0x07) || (fuel_level == 0x08) || (fuel_level == 0x09)){	//7-9
		tmpC = 0x3C;	//0011 1100
	}
	else if ((fuel_level == 0x0A) || (fuel_level == 0x0B) || (fuel_level == 0x0C)){	//10-12
		tmpC = 0x3E;	//0011 1110
	}
	else if ((fuel_level == 0x0D) || (tank == 0x0E) || (tank == 0x0F)){	//13-15
		tmpC = 0x3F;	//0011 1111
	}
		PORTC = tmpC;
    }
	return 0;
}

EX3
//fasten seatbelt: if (PA4 && PA5 && !PA6) --> PC7

unsigned char GetBit(unsigned char x, unsigned char k) {
	return ((x & (0x01 << k)) != 0);
}
unsigned char SetBit(unsigned char x, unsigned char k, unsigned char b) {
	return (b ? x | (0x01 << k) : x & ~(0x01 << k));
}



int main(void)
{
	DDRA = 0x00; PORTA = 0xFF;	//setup PORTA for input
	DDRC = 0xFF; PORTC = 0x00;	//setup PORTB for output
	
	unsigned char tmpC = 0x00;
	unsigned char fuel_level;
	
	
    while (1) 
    {
	fuel_level = PINA & 0x0F;
	
	//check fuel level		
	if((fuel_level == 0x01) || (fuel_level == 0x02)){	//1-2	
		tmpC = 0x60;	//0110 0000
	}
	else if ((fuel_level == 0x03) || (fuel_level == 0x04)){	//3-4
		tmpC = 0x70;	//0111 0000
	}
	else if ((fuel_level == 0x05) || (fuel_level == 0x06)){	//5-6
		tmpC = 0x38;	//0011 1000
	}
	else if ((fuel_level == 0x07) || (fuel_level == 0x08) || (fuel_level == 0x09)){	//7-9
		tmpC = 0x3C;	//0011 1100
	}
	else if ((fuel_level == 0x0A) || (fuel_level == 0x0B) || (fuel_level == 0x0C)){	//10-12
		tmpC = 0x3E;	//0011 1110
	}
	else if ((fuel_level == 0x0D) || (tank == 0x0E) || (tank == 0x0F)){	//13-15
		tmpC = 0x3F;	//0011 1111
	}

	tmpC = tmpC & 0x7F;
	
	//fasten seatbelt sign		
	if (GetBit(PINA,4) && GetBit(PINA,5) && !GetBit(PINA,6)){
		tmpC = SetBit(tmpC,7,1);
	}
		PORTC = tmpC;
    }
	return 0;
}


EX4 (challenge 1)
unsigned char SetBit(unsigned char x, unsigned char k, unsigned char b) {
	return (b ? x | (0x01 << k) : x & ~(0x01 << k));
}
unsigned char GetBit(unsigned char x, unsigned char k) {
	return ((x & (0x01 << k)) != 0);
}
int main(void)
{
	DDRA = 0x00; PORTA = 0xFF;	//setup for input
	DDRB = 0xFF; PORTB = 0x00;	//setup for output
	DDRC = 0xFF; PORTC = 0x00;	//setup for output
	
	unsigned char tmpB = 0x00;
	unsigned char tmpC = 0x00;
	unsigned char i;
    
    while (1) 
    {
	for(i = 0; i < 4; i++){
		if(GetBit(PINA,i)){ //checking 3 2 1 0 positions
			tmpC = SetBit(tmpC, i + 4, 1); //writing to 7 6 5 4
		}
	}
	for(i = 4; i < 8; i++){
		if(GetBit(PINA,i)){	//checking 7 6 5 4 
			tmpB = SetBit(tmpB, i - 4, 1);	//writing to 3 2 1 0
		}
	}
	PORTB = tmpB;
	PORTC = tmpC;
    }
	
	return 0;
}

EX5 Challenge 2
unsigned char SetBit(unsigned char x, unsigned char k, unsigned char b) {
	return (b ? x | (0x01 << k) : x & ~(0x01 << k));
}
unsigned char GetBit(unsigned char x, unsigned char k) {
	return ((x & (0x01 << k)) != 0);
}


int main(void)
{
	DDRB = 0xFE; PORTB = 0x01;
	DDRD = 0x00; PORTD = 0xFF;
	
	unsigned char tmpB;
	unsigned char tmpD = 0x00;
	unsigned char low = 0x00;
	unsigned char tot_weight = 0x00;

  
    while (1)
    {
	temp = 0x00;
	tmpD = PIND;
	tmpB = PINB;
	tot_weight = (tmpD * 2) //| tmpB;	//tmpD << 1
	
	if(tot_weight >= 70){
		temp = SetBit (temp, 1, 1);
	}
	else if( (tot_weight < 70) && (tot_weight > 5) ){
		temp = SetBit(temp, 2, 1);
	}
	else if(tot_weight <= 5){
		temp = SetBit (temp, 2, 0);
		temp = SetBit (temp, 1, 0);
	}
	PORTB = temp;
		
    }
	return 0;
}

 *	Partner 1 Name & E-mail: Jennifer Hunter jhunt013@ucr.edu
 *	Partner 2 Name & E-mail: Marcus Yee myee005@ucr.edu
 *	Lab Section: 028
 *	Assignment: Lab #3  Exercise # 1
 *	Exercise Description: [optional - include for your own benefit]
 *	I acknowledge all content contained herein, excluding template or example
 *	code, is my own original work.

DDRA         |              DDRD (7-0)            DDRB(6-0)
1111 0000    |              0000 0000             1111 1110
out   input                input input            out  out in

                             PORTD                  PORTB
                            1111 1111             0000 0001
1000110

[D7] [D6] [D5] [D4] [D3] [D2] [D1] [D0]   B7 B6 B5 B4 B3 B2 B1 [B0]
  0     1   0     0    0    1    1    1    0
